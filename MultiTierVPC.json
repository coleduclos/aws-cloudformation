{
    "Parameters" : {
        "Owner" : {
            "Type" : "String",
            "Description" : "Enter the owner of the VPC."
        },
        "VPCName" : {
            "Type" : "String",
            "Description" : "Enter the name of the VPC."
        }, 

    },

    "Mappings" : {
        "SubnetConfig" : {
            "VPC"     : { "CIDR" : "10.0.0.0/16" },
            "Public1"  : { "CIDR" : "10.0.0.0/24" },
            "Public2" : { "CIDR" : "10.0.1.0/24" },
            "Public3" : { "CIDR" : "10.0.2.0/24"},
            "Private1" : { "CIDR" : "10.0.3.0/24" },
            "Private2" : { "CIDR" : "10.0.4.0/24" },
            "Private3" : { "CIDR" : "10.0.5.0/24" }
        }
    },

    "Resources" : {
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "VPC", "CIDR" ] } ,
                "EnableDnsSupport" : "true",
                "EnableDnsHostnames" : "false",
                "InstanceTenancy" : "default",
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" },
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Ref" : "VPCName" },
                    } 
                ]
            }
        },
        "PublicSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public1", "CIDR" ]},
                "MapPublicIpOnLaunch" : "true",
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-public-1" ] ] }
                    }
                ],
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : {
                    "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]
                }
            }
        },

        "PublicSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public2", "CIDR" ]},
                "MapPublicIpOnLaunch" : "true",
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-public-2" ] ] }
                    }
                ],
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : {
                    "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]
                }
            }
        },

        "PublicSubnet3" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Public3", "CIDR" ]},
                "MapPublicIpOnLaunch" : "true",
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-public-3" ] ] }
                    }
                ],
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : {
                    "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ]
                }
            }
        },

        "PrivateSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Private1", "CIDR" ]},
                "MapPublicIpOnLaunch" : "false",
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-private-1" ] ] }
                    }
                ],
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : {
                    "Fn::Select" : [ "0", { "Fn::GetAZs" : "" } ]
                }
            }
        },

        "PrivateSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Private2", "CIDR" ]},
                "MapPublicIpOnLaunch" : "false",
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-private-2" ] ] }
                    }
                ],
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : {
                    "Fn::Select" : [ "1", { "Fn::GetAZs" : "" } ]
                }
            }
        },

        "PrivateSubnet3" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "CidrBlock" : { "Fn::FindInMap" : [ "SubnetConfig", "Private3", "CIDR" ]},
                "MapPublicIpOnLaunch" : "false",
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-private-3" ] ] }
                    }
                ],
                "VpcId" : { "Ref" : "VPC" },
                "AvailabilityZone" : {
                    "Fn::Select" : [ "2", { "Fn::GetAZs" : "" } ]
                }
            }
        },

        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-igw" ] ] }
                    }
                ]
            }
        },

        "InternetGatewayAttachment" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "InternetGatewayId" : { "Ref" : "InternetGateway" },
                "VpcId" : { "Ref" : "VPC" },
            }
        },  

        "NatEIP" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc"
            }
        },

        "NatGateway" : {
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt": [ "NatEIP", "AllocationId" ] },
                "SubnetId" : { "Ref" : "PublicSubnet1" }
            }
        },

        "PublicRT" : {
           "Type" : "AWS::EC2::RouteTable",
           "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-public-rt" ] ] }
                    }
                ]
           }
        },

        "PrivateRT" : {
           "Type" : "AWS::EC2::RouteTable",
           "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "Tags" : [ 
                    {
                        "Key" : "Owner",
                        "Value" : { "Ref" : "Owner" } 
                    },
                    {
                        "Key" : "Name",
                        "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPCName" }, "-private-rt" ] ] }
                    }
                ]
           }
        },

        "PublicRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" },
                "RouteTableId" : { "Ref" : "PublicRT" }
            }
        },

        "PrivateRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "NatGateway" },
                "RouteTableId" : { "Ref" : "PrivateRT" }
            }
        },

        "PublicSubnet1RTAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRT" },
                "SubnetId" : { "Ref" : "PublicSubnet1" }
            }
        },

        "PublicSubnet2RTAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRT" },
                "SubnetId" : { "Ref" : "PublicSubnet2" }
            }
        },

        "PublicSubnet3RTAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRT" },
                "SubnetId" : { "Ref" : "PublicSubnet3" }
            }
        },

        "PrivateSubnet1RTAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRT" },
                "SubnetId" : { "Ref" : "PrivateSubnet1" }
            }
        },

        "PrivateSubnet2RTAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRT" },
                "SubnetId" : { "Ref" : "PrivateSubnet2" }
            }
        },

        "PrivateSubnet3RTAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRT" },
                "SubnetId" : { "Ref" : "PrivateSubnet3" }
            }
        }       

    }
}