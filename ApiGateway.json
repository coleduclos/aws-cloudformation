{
    "Parameters" : {
        "Owner" :{
            "Type" : "String",
            "Description" : "Enter the owner of the stack."
        },
        "AppName" :{
            "Type" : "String",
            "Description" : "Enter the application name associated with the stack."
        },
        "CognitoPoolID" : {
            "Type" : "String",
            "Description" : "Enter the authorizing Cognito Pool ID."
        }
    },
    "Resources" : {
        "ApiGateway" : {
            "Type" : "AWS::ApiGateway::RestApi",
            "Properties" : {
                "Name" : { "Fn::Join" : [ "", [ { "Ref" : "AppName" }, "-api-gw" ] ] },
          }
        },
        "RatingResource" : {
            "Type" : "AWS::ApiGateway::Resource",
            "Properties" : {
                "ParentId" : { "Fn::GetAtt": ["ApiGateway", "RootResourceId"] },
                "PathPart" : "rating",
                "RestApiId" : { "Ref" : "ApiGateway" }
            }
        },
        "CognitoAutherizer" : {
            "Type" : "AWS::ApiGateway::Authorizer",
            "Properties" : {
                "IdentitySource" : "method.request.header.Authorization",
                "Name" : { "Fn::Join" : [ "", [ { "Ref" : "AppName" }, "-user-pool" ] ] },
                "ProviderARNs" : [ { "Fn::Join" : [ "", [ "arn:aws:cognito-idp:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" },":userpool/", { "Ref" : "CognitoPoolID" } ] ] } ],
                "RestApiId" : { "Ref" : "ApiGateway" },
                "Type" : "COGNITO_USER_POOLS"
            }
        },
        "RatingPOSTMethod" : {
            "Type" : "AWS::ApiGateway::Method",
            "Properties" : {
                "AuthorizationType" : "COGNITO_USER_POOLS",
                "AuthorizerId" : { "Ref" : "CognitoAutherizer" },
                "HttpMethod" : "POST",
                "ResourceId" : { "Ref" : "RatingResource" },
                "RestApiId" : { "Ref" : "ApiGateway" },
                "MethodResponses" : [
                    {
                        "StatusCode" : 200,
                        "ResponseParameters" : {
                            "method.response.header.Access-Control-Allow-Origin" : "*"
                        }
                    }
                ],
                "Integration" : {
                    "IntegrationHttpMethod" : "POST",
                    "Type" : "AWS_PROXY",
                    "Uri" : { "Fn::Join" : [ "", [ "arn:aws:apigateway:", { "Ref" : "AWS::Region" }, ":lambda:path/2015-03-31/functions/arn:aws:lambda:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" }, ":function:", { "Ref" : "AppName" }, "-ratings-service/invocations" ] ] }
                }
            }
        },
        "RatingsOptionsMethod" : {
            "Type" : "AWS::ApiGateway::Method",
            "Properties" : {
                "AuthorizationType" : "NONE",
                "HttpMethod" : "OPTIONS",
                "ResourceId" : { "Ref" : "RatingResource" },
                "RestApiId" : { "Ref" : "ApiGateway" },
                "MethodResponses" : [
                    {
                        "StatusCode" : 200,
                        "ResponseModels" : {
                            "application/json": "Empty"
                        },
                        "ResponseParameters" : {
                            "method.response.header.Access-Control-Allow-Headers" : false,
                            "method.response.header.Access-Control-Allow-Methods" : false,
                            "method.response.header.Access-Control-Allow-Origin" : false
                        }
                    }
                ],
                "Integration" : {
                    "Type" : "MOCK",
                    "PassthroughBehavior" : "WHEN_NO_MATCH",
                    "RequestTemplates": {
                        "application/json" : "{\"statusCode\": 200}"
                    },
                    "IntegrationResponses" : [
                    {
                        "StatusCode" : 200,
                        "ResponseTemplates" : {
                            "application/json": ""  
                        },
                        "ResponseParameters" : {
                            "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                            "method.response.header.Access-Control-Allow-Methods" : "'POST,OPTIONS'",
                            "method.response.header.Access-Control-Allow-Origin" : "'*'"
                        }
                    }
                ]
                }
            }
        },
        "DevApiDeployment" : {
            "Type" : "AWS::ApiGateway::Deployment",
            "Properties" : {
                "RestApiId" : { "Ref" : "ApiGateway" },
                "StageName" : "dev"
            },
            "DependsOn" : "RatingPOSTMethod"
        },
        "LambdaInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {

                "FunctionName" : { "Fn::Join" : [ "", [ "arn:aws:lambda:", { "Ref" : "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" }, ":function:", { "Ref" : "AppName"}, "-ratings-service" ] ] },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": { "Fn::Join" : [ "", [ "arn:aws:execute-api:", { "Ref" : "AWS::Region" } , ":", { "Ref" : "AWS::AccountId" }, ":", { "Ref" : "ApiGateway"}, "/*" ] ] }
            }
        }
    }
}